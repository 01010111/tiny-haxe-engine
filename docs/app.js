// Generated by Haxe 4.0.5
(function ($hx_exports, $global) { "use strict";
var Controls = function() { };
Controls.init = function() {
	window.document.onkeydown = function(e) {
		Controls.k.h[e.keyCode] = true;
		return;
	};
	window.document.onkeyup = function(e1) {
		Controls.k.h[e1.keyCode] = false;
		return;
	};
	Game.ctx.canvas.onpointerdown = function(e2) {
		Controls.k.h[-1 - e2.button] = true;
		return;
	};
	Game.ctx.canvas.onpointerup = function(e3) {
		Controls.k.h[-1 - e3.button] = false;
		return;
	};
	Game.ctx.canvas.onpointermove = function(e4) {
		return Controls.M = { x : Math.floor(e4.offsetX / Game.zx), y : Math.floor(e4.offsetY / Game.zy)};
	};
	Game.ctx.canvas.ontouchstart = function(e5) {
		Controls.k.h[-1] = true;
		return;
	};
	Game.ctx.canvas.ontouchend = function(e6) {
		Controls.k.h[-1] = false;
		return;
	};
	Game.ctx.canvas.ontouchmove = function(e7) {
		return Controls.M = { x : Math.floor(e7.touches.item(0).clientX / Game.zx), y : Math.floor(e7.touches.item(0).clientY / Game.zy)};
	};
};
var Game = $hx_exports["Game"] = function() { };
Game.init = function(p,_w,_h) {
	window.document.oncontextmenu = function(e) {
		return e.preventDefault();
	};
	var c = window.document.createElement("canvas");
	var el = window.document.getElementById(p);
	el.appendChild(c);
	Game.w = c.width = _w;
	Game.h = c.height = _h;
	Game.ctx = c.getContext("2d",null);
	Controls.init();
	window.onresize = function(e1) {
		Game.zx = el.offsetWidth / _w;
		return Game.zy = el.offsetHeight / _h;
	};
	window.onresize();
	window.requestAnimationFrame(Game.loop);
	Main.main();
};
Game.loop = function(e) {
	Game.t = e;
	Game.s.update();
	Game.s.draw();
	window.requestAnimationFrame(Game.loop);
};
var Main = function() { };
Main.main = function() {
	Game.s = new MyScene();
};
var MyScene = function() {
};
MyScene.prototype = {
	update: function() {
	}
	,draw: function() {
	}
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
Controls.M = { x : 0, y : 0};
Controls.k = new haxe_ds_IntMap();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
